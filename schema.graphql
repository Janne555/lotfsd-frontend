type AttributeModifiers {
  characterId: String!
  charisma: Int!
  constitution: Int!
  dexterity: Int!
  id: String!
  intelligence: Int!
  strength: Int!
  wisdom: Int!
}

input AttributeModifiersInput {
  characterId: String!
  charisma: Int!
  constitution: Int!
  dexterity: Int!
  intelligence: Int!
  strength: Int!
  wisdom: Int!
}

type Attributes {
  characterId: String!
  charisma: Int!
  constitution: Int!
  dexterity: Int!
  id: String!
  intelligence: Int!
  strength: Int!
  wisdom: Int!
}

input AttributesInput {
  characterId: String!
  charisma: Int!
  constitution: Int!
  dexterity: Int!
  intelligence: Int!
  strength: Int!
  wisdom: Int!
}

scalar BigInt

scalar Byte

type CombatOptions {
  characterId: String!
  defensive: Boolean!
  id: String!
  improvedParry: Boolean!
  parry: Boolean!
  press: Boolean!
  standard: Boolean!
}

input CombatOptionsInput {
  characterId: String!
  standard: Boolean!
  parry: Boolean!
  improvedParry: Boolean!
  press: Boolean!
  defensive: Boolean!
}

type CommonActivities {
  architecture: Int!
  bushcraft: Int!
  characterId: String!
  climbing: Int!
  id: String!
  languages: Int!
  openDoors: Int!
  search: Int!
  sleightOfHand: Int!
  sneakAttack: Int!
  stealth: Int!
  tinkering: Int!
}

input CommonActivitiesInput {
  characterId: String!
  architecture: Int!
  bushcraft: Int!
  climbing: Int!
  languages: Int!
  openDoors: Int!
  search: Int!
  sleightOfHand: Int!
  sneakAttack: Int!
  stealth: Int!
  tinkering: Int!
}

"""
The `Date` scalar type represents a year, month and day in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar Date

"""
The `DateTime` scalar type represents a date and time. `DateTime` expects
timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTime

"""
The `DateTimeOffset` scalar type represents a date, time and offset from UTC.
`DateTimeOffset` expects timestamps to be formatted in accordance with the
[ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) standard.
"""
scalar DateTimeOffset

scalar Decimal

type Effect {
  characterId: String!
  id: String!
  method: String!
  target: String!
  type: String!
  value: Int!
}

input EffectInput {
  characterId: String!
  type: String!
  target: String!
  method: String!
  value: Int!
}

scalar Guid

type Info {
  age: Int!
  alignment: String!
  attackBonus: Int!
  characterId: String!
  class: String!
  currentHp: Int!
  experience: Int!
  gender: String!
  id: String!
  maxHp: Int!
  name: String!
  player: String!
  race: String!
  surpriseChance: Int!
}

input InfoInput {
  characterId: String!
  name: String!
  experience: Int!
  class: String!
  race: String!
  age: Int!
  gender: String!
  alignment: String!
  player: String!
  attackBonus: Int!
  currentHp: Int!
  maxHp: Int!
  surpriseChance: Int!
}

scalar Long

"""
The `Milliseconds` scalar type represents a period of time represented as the total number of milliseconds.
"""
scalar Milliseconds

type Mutation {
  addAttributeModifiers(attributeModifiers: AttributeModifiersInput!): AttributeModifiers
  addAttributes(attributes: AttributesInput!): Attributes
  addCombatOptions(combatOptions: CombatOptionsInput!): CombatOptions
  addCommonActivities(commonActivities: CommonActivitiesInput!): CommonActivities
  addEffect(effect: EffectInput!): Effect
  addInfo(info: InfoInput!): Info
  addRetainer(retainer: RetainerInput!): Retainer
  addSavingThrows(savingThrows: SavingThrowsInput!): SavingThrows
  addWallet(wallet: WalletInput!): Wallet
  replaceAttributeModifiers(attributeModifiers: AttributeModifiersInput!): AttributeModifiers
  replaceAttributes(attributes: AttributesInput!): Attributes
  replaceCombatOptions(combatOptions: CombatOptionsInput!): CombatOptions
  replaceCommonActivities(commonActivities: CommonActivitiesInput!): CommonActivities
  replaceEffect(effect: EffectInput!): Effect
  replaceInfo(info: InfoInput!): Info
  replaceRetainer(retainer: RetainerInput!): Retainer
  replaceSavingThrows(savingThrows: SavingThrowsInput!): SavingThrows
  replaceWallet(wallet: WalletInput!): Wallet
}

type Query {
  allAttributeModifiers: [AttributeModifiers]
  allAttributes: [Attributes]
  allCombatOptions: [CombatOptions]
  allCommonActivities: [CommonActivities]
  allSavingThrows: [SavingThrows]
  attributeModifiers(id: String = null): AttributeModifiers
  attributes(id: String = null): Attributes
  combatOptions(id: String = null): CombatOptions
  commonActivities(id: String = null): CommonActivities
  effect(id: String = null): Effect
  effects: [Effect]
  info(id: String = null): Info
  infos: [Info]
  retainer(id: String = null): Retainer
  retainers: [Retainer]
  savingThrows(id: String = null): SavingThrows
  wallet(id: String = null): Wallet
  wallets: [Wallet]
}

type Retainer {
  characterId: String!
  class: String!
  hitpoints: Int!
  id: String!
  level: Int!
  name: String!
  position: String!
  share: Int!
  wage: Int!
}

input RetainerInput {
  characterId: String!
  name: String!
  position: String!
  class: String!
  level: Int!
  hitpoints: Int!
  wage: Int!
  share: Int!
}

type SavingThrows {
  breathWeapon: Int!
  characterId: String!
  id: String!
  magic: Int!
  magicalDevice: Int!
  paralyze: Int!
  poison: Int!
}

input SavingThrowsInput {
  characterId: String!
  paralyze: Int!
  poison: Int!
  breathWeapon: Int!
  magicalDevice: Int!
  magic: Int!
}

scalar SByte

"""
The `Seconds` scalar type represents a period of time represented as the total number of seconds.
"""
scalar Seconds

scalar Short

scalar UInt

scalar ULong

scalar Uri

scalar UShort

type Wallet {
  characterId: String!
  copper: Int!
  gold: Int!
  id: String!
  silver: Int!
}

input WalletInput {
  characterId: String!
  copper: Int!
  silver: Int!
  gold: Int!
}

